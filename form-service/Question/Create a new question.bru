meta {
  name: Create a new question
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/questions
  body: json
  auth: none
}

body:json {
  // {
  //     "ParentTemplateId": "d9e0416b-b142-4492-a522-a7fc57f9c224",     //Form Template id
  //     "ParentSectionId": "36869bba-551f-4aaf-a150-ccafd9567254",      //Form Section Id
  //     "Title": "Question Two",
  //     "Description": "Question Two description",
  //     "DisplayCode": "Question Two Display code",
  //     "ResponseType": "Integer",
  //     "Score": 11,
  //     "CorrectAnswer": "Question Two correct answer",
  //     "Hint": "Question Two hint",
  //     "Options":"option1,option2",
  //     "QuestionImageUrl":"this.is.image",
  //     "RangeMin":2,
  //     "RangeMax":4
  // },
  // {
  //     "ParentTemplateId": "d9e0416b-b142-4492-a522-a7fc57f9c224",
  //     "ParentSectionId": "36869bba-551f-4aaf-a150-ccafd9567254",
  //     "Title": "range ........!",
  //     "Description": "Birth Day",
  //     "ResponseType": "Boolean",
  //     "Score": 5,
  //     // "DisplayCode": "2b3b3ea7-d55f-46fb-901f-380a92be0059",
  //     "CorrectAnswer": "1234",
  //     "Hint": "date",
  //     "QuestionImageUrl": "a",
  //     "RangeMin": 1,
  //     "RangeMax": 2,
  //     "Options": "option1, option2"
  // }
  // {
  //     "ParentTemplateId": "5777e0a8-6ba7-4313-ba4a-ff9b5bdb3d4a",
  //     "ParentSectionId": "a1b31378-59b0-4ca8-8d54-323798bf924e",
  //     "Title": "qqqqqqqqqqqqqqqq",
  //     "Description": "qqqqqqqqq",
  //     "ResponseType": "Text",
  //     "Score": 1,
  //     "CorrectAnswer": "qqqqqqqqqqqqqqq",
  //     "Hint": "qqqqqqqqqqqqq",
  //     "QuestionImageUrl": "qqqqqqqqqqqq",
  //     "RangeMin": null,
  //     "RangeMax": null,
  //     "Options": [
  //         "option1",
  //         "option2"
  //     ]
  // }
  // {
  //     "ParentTemplateId": "5777e0a8-6ba7-4313-ba4a-ff9b5bdb3d4a",
  //     "ParentSectionId": "a1b31378-59b0-4ca8-8d54-323798bf924e",
  //     "Title": "qqqqqqqqqqqqqqqq",
  //     "Description": "qqqqqqqqqq",
  //     "ResponseType": "SinglehoiceSelection",
  //     "Score": 1,
  //     "CorrectAnswer": "qqqqqqqqqqqqqqq",
  //     "Hint": "qqqqqqqqqqqqq",
  //     "QuestionImageUrl": "qqqqqqqqqqqq",
  //     "RangeMin": null,
  //     "RangeMax": null,
  //     "Options": [
  //         {
  //             "Text": "qqqqq",
  //             "Sequence": 1
  //         },
  //         {
  //             "Text": "qqqq",
  //             "Sequence": 2
  //         },
  //         {
  //             "Text": "qq",
  //             "Sequence": 3
  //         }
  //     ]
  // }
  {
    "ParentTemplateId": "4fabef36-5992-4f9c-aa7b-2539ae24aa7e",
    "ParentSectionId": "b8243963-7999-4623-b357-d1d16549d619",
    "ResponseType": "SingleChoiceSelection",
    "Options": [
      {
        "Text": "qqqqq",
        "Sequence": "1",
        "ImageUrl": "asdasfdsf"
      },
      {
        "Text": "qqqqq",
        "Sequence": "2",
        "ImageUrl": "asdasfdsf"
      },
      {
        "Text": "qqqqq",
        "Sequence": "3",
        "ImageUrl": "asdasfdsf"
      },
      {
        "Text": "qqqqq",
        "Sequence": "1",
        "ImageUrl": "asdasfdsf"
      },
      {
        "Text": "qqqqq",
        "Sequence": "2",
        "ImageUrl": "asdasfdsf"
      },
      {
        "Text": "qqqqq",
        "Sequence": "3",
        "ImageUrl": "asdasfdsf"
      }
    ]
  }
}

tests {
  try {
      var jsonRes = res.getBody();
      bru.setEnvVar("QUESTION_ID", jsonRes.Data.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('Success');
  });
  
  test("Question is created", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
      expect(jsonRes.Data).to.have.property('ParentTemplateId');
      expect(jsonRes.Data).to.have.property('ParentSectionId');
      expect(jsonRes.Data).to.have.property('Title');
      expect(jsonRes.Data).to.have.property('Description');
      expect(jsonRes.Data).to.have.property('DisplayCode');
      expect(jsonRes.Data).to.have.property('ResponseType');
      expect(jsonRes.Data).to.have.property('Score');
      expect(jsonRes.Data).to.have.property('CorrectAnswer');
      expect(jsonRes.Data).to.have.property('Hint');
      expect(jsonRes.Data).to.have.property('Options');
      expect(jsonRes.Data).to.have.property('QuestionImageUrl');
      expect(jsonRes.Data).to.have.property('RangeMin');
      expect(jsonRes.Data).to.have.property('RangeMax');
      
  });
}
