meta {
  name: Create Function Expression Operation
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/field-function-expression-operations
  body: json
  auth: none
}

headers {
  x-api-key: {{INTERNAL_API_KEY}}
  Authorization: Bearer {{JWT_TOKEN}}
  Content-Type: application/json
}

body:json {
  {
    "Name": "BMI Calculation Function",
    "Description": "Calculate BMI using weight and height fields",
    "Expression": "weight / (height / 100) ^ 2",
    "Variables": "{\"weight\": {\"Type\": \"FieldReference\", \"DataType\": \"Float\", \"FieldId\": \"{{WEIGHT_FIELD_ID}}\"}, \"height\": {\"Type\": \"FieldReference\", \"DataType\": \"Float\", \"FieldId\": \"{{HEIGHT_FIELD_ID}}\"}}"
  }
  
  {
                  FieldId: 'monthly-payment',
                  Name: 'monthly-payment',
                  Label: 'Monthly Payment',
                  ResponseType: FieldResponseType.Float,
                  Required: false,
                  CalculateLogic:
                  {
                      id: 'payment-calculation',
                      Type: LogicType.Calculation,
                      FieldId: 'monthly-payment',
                      Enabled: true,
                      Rules: [
                          {
                              id: 'calculate-payment',
                              Name: 'Calculate monthly payment',
                              Operation: {
                                  id: 'payment-formula',
                                  Type: OperationType.FunctionExpression,
                                  Expression: 'P * (r / 1200) / (1 - pow(1 + (r / 1200), -n))',
                                  Variables: {
                                      P: { Type: OperandType.FieldReference, DataType: OperandDataType.Float, FieldId: 'loan-amount' },
                                      r: { Type: OperandType.FieldReference, DataType: OperandDataType.Float, FieldId: 'interest-rate' },
                                      n: { Type: OperandType.FieldReference, DataType: OperandDataType.Integer, FieldId: 'loan-term' }
                                  }
                              }
                          }
                      ]
                  }
  
              },
}

script:post-response {
  try {
    var jsonRes = res.getBody();
    bru.setEnvVar("FUNCTION_EXPRESSION_OPERATION_ID", jsonRes.Data.id);
  }
  catch (error) {
    console.log(error.message);
  }
  
  test("Request is successful", function () {
    expect(res.getStatus()).to.equal(201);
    var jsonRes = res.getBody();
    expect(jsonRes.Status).to.eql('Success');
  });
  
  test("Function Expression Operation is created with correct properties", function () {
    var jsonRes = res.getBody();
    expect(jsonRes.Data).to.have.property('id');
    expect(jsonRes.Data).to.have.property('Name');
    expect(jsonRes.Data.Name).equals('BMI Calculation Function');
    expect(jsonRes.Data).to.have.property('Description');
    expect(jsonRes.Data.Description).equals('Calculate BMI using weight and height fields');
    expect(jsonRes.Data).to.have.property('Type');
    expect(jsonRes.Data.Type).equals('FunctionExpression');
    expect(jsonRes.Data).to.have.property('Expression');
    expect(jsonRes.Data.Expression).equals('weight / (height / 100) ^ 2');
    expect(jsonRes.Data).to.have.property('Variables');
    expect(jsonRes.Data).to.have.property('CreatedAt');
    expect(jsonRes.Data).to.have.property('UpdatedAt');
  });
}
