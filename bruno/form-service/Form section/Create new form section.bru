meta {
  name: Create new form section
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/form-sections
  body: json
  auth: none
}

body:json {
  // {
  //     "ParentFormTemplateId": "64888ed6-7452-48ad-8f4e-48448f21259f",  //Form template id
  //     "SectionIdentifier": "SectionIdentifier",
  //     "Title": "Title.................",
  //     "Description": "Description",
  //     // "DisplayCode": "DisplayCode",
  //     "Sequence": "Sequence three",
  //     "ParentSectionId": "2ed8ebf0-bfac-462c-9012-9a3ab5f59ba6"   //any uuid value
  // }
  {
      "ParentFormTemplateId": "7d6fe0be-3f6c-4a8e-8231-b8a7568d2c9d",
      // "SectionIdentifier": "new form section 1"
       "Title": "New form section ",
      "Description": "sf esdrg",
      "Sequence": 12,
      "ParentSectionId": "44071647-f61e-448b-8dec-ae2c8d3017c6"
  }
}

script:post-response {
  try {
      var jsonRes = res.getBody();
      bru.setEnvVar("SECTION_ID", jsonRes.Data.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('Success');
  });
  
  test("User is created", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
      expect(jsonRes.Data).to.have.property('ParentFormTemplateId');
      expect(jsonRes.Data).to.have.property('SectionIdentifier');
      expect(jsonRes.Data).to.have.property('Title');
      expect(jsonRes.Data).to.have.property('Description');
      expect(jsonRes.Data).to.have.property('DisplayCode');
      expect(jsonRes.Data).to.have.property('Sequence');
      expect(jsonRes.Data).to.have.property('ParentSectionId');
      
  });
}
