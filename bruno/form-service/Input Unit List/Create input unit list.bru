meta {
  name: Create Input Unit List
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/input-unit-lists
  body: json
  auth: none
}

headers {
  x-api-key: {{INTERNAL_API_KEY}}
  Authorization: Bearer {{JWT_TOKEN}}
  Content-Type: application/json
}

body:json {
  {
    "Name": "Temperature Units",
    "Description": "Common temperature measurement units",
  //   "DisplayCode": "TEMP_UNITS",
  //   "IsActive": true,
    "Units": [
      {
        "Name": "Celsius",
        "Symbol": "°C",
        "Description": "Celsius temperature scale",
        "ConversionFactor": 1.0,
        "IsDefault": true
      },
      {
        "Name": "Fahrenheit",
        "Symbol": "°F",
        "Description": "Fahrenheit temperature scale",
        "ConversionFactor": 1.8,
        "IsDefault": false
      },
      {
        "Name": "Kelvin",
        "Symbol": "K",
        "Description": "Kelvin temperature scale",
        "ConversionFactor": 1.0,
        "IsDefault": false
      }
    ]
  }
}

script:post-response {
  try {
    var jsonRes = res.getBody();
    bru.setEnvVar("INPUT_UNIT_LIST_ID", jsonRes.Data.id);
  }
  catch (error) {
    console.log(error.message);
  }
  
  test("Request is successful", function () {
    expect(res.getStatus()).to.equal(201);
    var jsonRes = res.getBody();
    expect(jsonRes.Status).to.eql('Success');
  });
  
  test("Input Unit List is created with correct properties", function () {
    var jsonRes = res.getBody();
    expect(jsonRes.Data).to.have.property('id');
    expect(jsonRes.Data).to.have.property('Name');
    expect(jsonRes.Data.Name).equals('Temperature Units');
    expect(jsonRes.Data).to.have.property('Description');
    expect(jsonRes.Data.Description).equals('Common temperature measurement units');
    expect(jsonRes.Data).to.have.property('DisplayCode');
    expect(jsonRes.Data.DisplayCode).equals('TEMP_UNITS');
    expect(jsonRes.Data).to.have.property('IsActive');
    expect(jsonRes.Data.IsActive).equals(true);
    expect(jsonRes.Data).to.have.property('Units');
    expect(jsonRes.Data.Units).to.be.an('array');
    expect(jsonRes.Data.Units.length).to.equal(3);
    expect(jsonRes.Data).to.have.property('CreatedAt');
    expect(jsonRes.Data).to.have.property('UpdatedAt');
  });
}
